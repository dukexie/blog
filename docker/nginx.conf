user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

env BLOG_ENV;

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $request_time $upstream_response_time';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

    upstream nodejs {
        server blog:8360;
    }

    server {
        listen 8080;

        root /etc/nginx/app;

        index index.html;

        server_tokens off;

        etag off;
        gzip off;

        # 设置环境变量
        set_by_lua $BLOG_ENV 'return os.getenv("BLOG_ENV")';
        more_set_headers 'x-blog-env $BLOG_ENV';

        # 自定义错误页
        error_page 400 403 404 500 502 504 /404.html;
        location = /404.html {
            root /etc/nginx/app;
            more_set_headers 'Cache-Control: no-store';
        }

        location @proxy_redirect_nocache {
            add_header Cache-Control 'no-store';
            if ($http_x_forwarded_proto) {
                return 302 $http_x_forwarded_proto://$http_host$upstream_http_location;
            }
            # Aliyun CDN
            if ($http_x_client_scheme) {
                return 302 $http_x_client_scheme://$http_host$upstream_http_location;
            }
            return 302 $scheme://$http_host$upstream_http_location;
        }

        # 静态文件
        location ^~ /static/ {
            expires                     max;
        }

        location / {
            try_files $uri $uri/index.html @nodejs;
        }

        location @nodejs {
            proxy_http_version          1.1;
            proxy_set_header            Connection "";
            proxy_set_header            X-Real-IP $remote_addr;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header            Host $http_host;
            proxy_set_header            X-NginX-Proxy true;
            proxy_pass                  http://nodejs$request_uri;
            proxy_redirect              off;
            proxy_intercept_errors      on;
            proxy_hide_header           'X-Powered-By';
            proxy_hide_header           'x-blog-env';

            # 后台页面不加缓存
            # 搜索页面不加缓存
            add_header Cache-Control 'max-age=600, s-maxage=604800';
            if ($uri ~* ^/admin(/|/.*)?$) {
                add_header Cache-Control 'no-store';
            }
            if ($uri = /search.html) {
                add_header Cache-Control 'no-store';
            }

            # 自定义错误页和重定向无缓存
            error_page 301 302 307 = @proxy_redirect_nocache;
            error_page 400 403 404 500 502 504 /404.html;
        }
    }
}